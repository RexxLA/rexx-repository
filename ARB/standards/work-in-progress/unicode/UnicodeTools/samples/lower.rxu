/****************************************************************************************************************

 ┌───────────────────────────────────────────────────────────────────────────────────────────────────────────────┐  
 │ This file is part of The Unicode Tools Of Rexx (TUTOR).                                                       │
 │ See https://github.com/RexxLA/rexx-repository/tree/master/ARB/standards/work-in-progress/unicode/UnicodeTools │
 │ Copyright © 2023 Josep Maria Blasco <josep.maria.blasco@epbcn.com>.                                           │
 │ License: Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0).                                    │
 └───────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
 
 *****************************************************************************************************************/

--------------------------------------------------------------------------------
-- This program is part of the automated test suite. See tests/test.all.rex   --
-------------------------------------------------------------------------------- 

-- lower.rxu - Test some features of the LOWER BIF.                                 

Arg auto .
auto = auto == "AUTO"

Options Conversions Promote

Say "Testing the LOWER BIF:"
Say "----------------------"

Call NextTest "Testing the lowercasing of many european characters"

Call Test "ÁÉÍÓÚÝÀÈÌÒÙÄËÏÖÜÂÊÎÔÛÑÃÕÇ"T,"áéíóúýàèìòùäëïöüâêîôûñãõç"

Call NextTest "Testing non-final and final sigma:"

Say "Uppercase sigma ('Σ') gets lowercased to 'σ' or to 'ς'"
Say "depending on whether 'Σ' was a medial or final letter." 
Say 

Call Test "ὈΔΥΣΣΕΎΣ"P,"ὀδυσσεύς"

Call NextTest "Testing non one-to-one casing for CODEPOINTS:"

Test = CODEPOINTS("41 130"U)
Call Test test, "6169CC87"X

Say "Length('"test"') =" Length(test)
Say "Length(Lower('"test"')) =" Length(Lower(test))

Call NextTest "Testing non one-to-one casing for TEXT:"

Test = Text("41 130"U)
Call Test test, "6169CC87"X

Say "Length('"test"') =" Length(test)
Say "Length(Lower('"test"')) =" Length(Lower(test))

Call NextTest "More peculiarities of LOWER:"

Test = Text("The.ΛÓΓΟΣ.word")
Do length = 1 To 8
  Say "Lower('"test"',5,"length") = '"Lower(test,5,length)"'"
End
Say
Say "Done!"

Exit

Test:
  Use Arg string
  Say "Lower('"string"') = '"Lower(string)"'"
  If Lower(string) \== Arg(2) Then Do
    Say "Test FAILED!"
    Say "Expected: '"Arg(2)"'."
    Exit 1
  End  
Return  

NextTest:
  Use Arg title
  Say
  Say "(press ENTER to continue)"
  Say 
  If \auto Then Parse Pull
  Say title
  Say Copies("-",Length(title))
  Say 
Return  
