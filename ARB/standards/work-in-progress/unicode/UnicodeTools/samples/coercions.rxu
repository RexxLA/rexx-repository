/****************************************************************************************************************

 ┌───────────────────────────────────────────────────────────────────────────────────────────────────────────────┐  
 │ This file is part of The Unicode Tools Of Rexx (TUTOR).                                                       │
 │ See https://github.com/RexxLA/rexx-repository/tree/master/ARB/standards/work-in-progress/unicode/UnicodeTools │
 │ Copyright © 2023 Josep Maria Blasco <josep.maria.blasco@epbcn.com>.                                           │
 │ License: Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0).                                    │
 └───────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
 
 *****************************************************************************************************************/

--------------------------------------------------------------------------------
-- This program is part of the automated test suite. See tests/test.all.rex   --
--------------------------------------------------------------------------------

text       = "text"T        -- This is a grapheme cluster string
codepoints = "codepoints"P  -- This is a codepoints string
bytes      = "bytes"Y       -- This is a bytes string

Say "Testing default behaviour"
Call Test 0

Say "Testing 'Options coercions Left'"
Options coercions Left
Call Test 0

Say "Testing 'Options coercions Right'"
Options coercions Right
Call Test 0

Say "Testing 'Options coercions Promote'"
Options coercions Promote
Call Test 0

Say "Testing 'Options coercions Demote'"
Options coercions Demote
Call Test 0

Say "Testing 'Options coercions None'"
Options coercions None
Call Test 1

Exit

Test:
  Arg expectSyntax
  Signal On Syntax
  Call CharOut ,"StringType(bytes      || bytes)      = '"; Say StringType(bytes      || bytes)"'"
  Call CharOut ,"StringType(bytes      || codepoints) = '"; Say StringType(bytes      || codepoints)"'"
  Call CharOut ,"StringType(bytes      || text )      = '"; Say StringType(bytes      || text)"'"
  Call CharOut ,"StringType(codepoints || bytes)      = '"; Say StringType(codepoints || bytes)"'"
  Call CharOut ,"StringType(codepoints || codepoints) = '"; Say StringType(codepoints || codepoints)"'"
  Call CharOut ,"StringType(codepoints || text )      = '"; Say StringType(codepoints || text)"'"
  Call CharOut ,"StringType(text       || bytes)      = '"; Say StringType(text       || bytes)"'"
  Call CharOut ,"StringType(text       || codepoints) = '"; Say StringType(text       || codepoints)"'"
  Call CharOut ,"StringType(text       || text )      = '"; Say StringType(text       || text)"'"
  Say
  If expectSyntax Then Do
    Say "FAILED!"
    Say "Expected syntax error not raised."
    Exit 1
  End
  Say "PASSED!"
  Say
Return

Syntax:
  If \expectSyntax Then Do
    Say "FAILED!"
    Say "Traceback follows:"
    Say
    Say Condition("O")~TraceBack~makeArray
    Say
    Say "Unexpected Syntax error:" rc"."Condition("E") "on" Condition("O")~program":" Condition("O")~ErrorText
    Say Condition("O")~Message
    Exit 1
  End
  Say
  Say "Syntax error!"
  Say "PASSED!"
  Say
Return