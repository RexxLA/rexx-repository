/*****************************************************************************/
/*                                                                           */
/*  The UNICODE Tools for ooRexx                                             */
/*  ============================                                             */
/*                                                                           */
/*  Copyright (c) 2023 Josep Maria Blasco <josep.maria.blasco@epbcn.com>     */
/*                                                                           */
/*  See https://github.com/RexxLA, rexx-repository,                          */
/*      path ARB/standards/work-in-progress/unicode/UnicodeTools             */
/*                                                                           */
/*  License: Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0  */
/*                                                                           */
/*                                                                           */
/*  The Unicode Jean-Louis Faucher demo                                      */
/*  ===================================                                      */
/*                                                                           */
/*  This demo file reproduces most of the tests included in the test set     */
/*  devised by Jean-Louis Faucher (see the URL below) and runs them using    */
/*  the Unicode Tools.                                                       */    
/*                                                                           */
/*  Version history                                                          */
/*  ===============                                                          */
/*                                                                           */
/*  Vers. Aut Date     Comments                                              */
/*  ----- --- -------- ----------------------------------------------------- */
/*  00.1  JMB 20230716 Initial release                                       */
/*  00.1a JMB 20230717 Move to "demo" subdir                                 */
/*  00.2  JMB 20230725 Rename to .rxu and move to "samples" subdir           */
/*                                                                           */
/*****************************************************************************/

noelemojiText = "noël👩‍👨‍👩‍👧🎅"T

Say "Most of the tests found in"
Say "https://github.com/RexxLA/rexx-repository/tree/master/ARB/standards/work-in-progress/code/expected_results"
Say
Say "There is only one test that fails. This is due to the fact that normalized" 
Say "comparisons are not yet implemented."
Say
Say 'center("noël👩‍👨‍👩‍👧🎅"T, 10) = "'center("noël👩‍👨‍👩‍👧🎅"T, 10)""" ("||(center("noël👩‍👨‍👩‍👧🎅"T, 10) == '  noël👩‍👨‍👩‍👧🎅  ')~?("OK", "KO")")"
Say 'center("noël👩‍👨‍👩‍👧🎅"T, 5) = "'center(noelEmojiText, 5)""" ("||(center(noelEmojiText, 5) == 'noël👩‍👨‍👩‍👧')~?("OK", "KO")")"
Say 'center("noël👩‍👨‍👩‍👧🎅"T, 3) = "'center(noelEmojiText, 3)""" ("||(center(noelEmojiText, 3) == 'oël')~?("OK", "KO")")"
Say 'center("noël👩‍👨‍👩‍👧🎅"T, 10, "═") = "'center(noelEmojiText, 10, "═")""" ("||(center(noelEmojiText, 10, "═") == '══noël👩‍👨‍👩‍👧🎅══')~?("OK", "KO")")"
Say 'copies(Text("́cafe"), 4) = "'copies(Text("́cafe"), 4)""" ("||(copies("́cafe"T, 4) == '́cafécafécafécafe')~?("OK", "KO")")"
Say 'Length("café"T) = "'Length("café"T)""" ("||(Length("café"T) == 4)~?("OK", "KO")")"
Say 'Length("𝖼𝖺𝖿é"T) = "'Length("𝖼𝖺𝖿é"T)""" ("||(Length("𝖼𝖺𝖿é"T) == 4)~?("OK", "KO")")"
Say 'Length("café"T) = "'Length("café"T)""" ("||(Length("café"T) == 4)~?("OK", "KO")")"
Say 'Length("noël👩‍👨‍👩‍👧🎅"T) = "'Length(noelEmojiText)""" ("||(Length(noelEmojiText) == 6)~?("OK", "KO")")"
Say 'Length("äöü äöü x̂ ϔ ﷺ baﬄe"T) = "'Length("äöü äöü x̂ ϔ ﷺ baﬄe"T)""" ("||(Length("äöü äöü x̂ ϔ ﷺ baﬄe"T) == 18)~?("OK", "KO")")"
Say 'Pos("é"T, "café"T) = "'Pos("é"T, "café"T)""" ("||(Pos("é"T,"café"T) == 4)~?("OK", "KO")")"
Say 'Pos("é"T, "𝖼𝖺𝖿é"T) = "'Pos("é"T, "𝖼𝖺𝖿é"T)""" ("||(Pos("é"T, "𝖼𝖺𝖿é"T) == 4)~?("OK", "KO")")"
Say 'Pos("é"T, "café"T) = "'Pos("é"T,"café"T)""" ("||(Pos("é", "café"T) == 4)~?("OK", "KO")") <<-- Expected to fail until normalization is implemented"
Say 'SubStr("noël👩‍👨‍👩‍👧🎅"T, 3, 3) = "'substr(noelemojiText, 3, 3)""" ("||(substr(noelemojiText, 3, 3) == 'ël👩‍👨‍👩‍👧')~?("OK", "KO")")"
Say 'SubStr("noël👩‍👨‍👩‍👧🎅"T, 3, 6) = "'substr(noelemojiText, 3, 6)""" ("||(substr(noelemojiText, 3, 6) == 'ël👩‍👨‍👩‍👧🎅  ')~?("OK", "KO")")"
Say 'SubStr("noël👩‍👨‍👩‍👧🎅"T, 3, 6, "▷") = "'substr(noelemojiText, 3, 6, "▷")""" ("||(substr(noelemojiText, 3, 6, "▷") == 'ël👩‍👨‍👩‍👧🎅▷▷')~?("OK", "KO")")"