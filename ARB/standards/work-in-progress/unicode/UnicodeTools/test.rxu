
Say .Unicode.Normalization~Canonical_Decomposition_Mapping32("0001 F071"X)~c2x
Exit

Do i = 0 To 20000~x2d
  If i >= d800~x2d, i <= dfff~x2d Then Iterate
  c = NiceCode(D2X(i))
  u = UTF8(c)
  If \CODEPOINTS(U)~isNFC Then Do
    say i c u~c2x
    Pull
  End
End
Exit


NiceCode: 
  Arg aCode
  aCode = Strip(aCode,"L",0)
  If Length(aCode) < 4 Then aCode = Right(aCode,4,0)
Return aCode  

UTF8: Procedure
  Use Arg code
  n = X2D(code)
  b = X2B(code)
  If b~length == 20 Then b = "0000"||b
  If b~length == 8, n >= 128 Then b = "0000"||b
  Select
    When n <= 127   Then Return X2C(code[3,2])
    When n <= 2047  Then Return X2C(B2X("110"SubStr(b,6,5)"10"Right(b,6)))
    When n <= 65535 Then Return X2C(B2X("1110"Left(b,4)"10"SubStr(b,5,6)"10"Right(b,6)))
    Otherwise            Return X2C(B2X("11110"SubStr(b,4,3) "10"SubStr(b,7,6) "10"SubStr(b,13,6) "10"Right(b,6)))
  End

::Requires "Unicode.cls"