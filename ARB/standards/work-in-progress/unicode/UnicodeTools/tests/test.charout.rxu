/****************************************************************************************************************

 ┌───────────────────────────────────────────────────────────────────────────────────────────────────────────────┐  
 │ This file is part of The Unicode Tools Of Rexx (TUTOR).                                                       │
 │ See https://github.com/RexxLA/rexx-repository/tree/master/ARB/standards/work-in-progress/unicode/UnicodeTools │
 │ Copyright © 2023 Josep Maria Blasco <josep.maria.blasco@epbcn.com>.                                           │
 │ License: Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0).                                    │
 └───────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
 
 *****************************************************************************************************************/

--------------------------------------------------------------------------------
-- This program is part of the automated test suite. See tests/test.all.rex   --
--------------------------------------------------------------------------------

tmpfile = SysTempFileName("????.file")

If tmpFile == "" Then Do
  Say "Cannot create temporary file."
  Exit 1
End

Say "Testing the CHAROUT BIF..."
Say 
Say "We will first test standard behaviour."

Call CharOut tmpFile, "abcde" -- Write some chars
Call CharOut tmpFile,, 4      -- Set the write position
Call CharOut tmpFile,"X"      -- Write one char
Call CharOut tmpFile          -- Close the file
If   Stream( tmpFile, "State") \== "UNKNOWN" Then Do
  Say "FAILED! Stream state should be UNKNOWN after closing."
  Call Exit 1
End
lin = LineIn(tmpFile)
If lin \== "abcXe" Then Do
  Say "FAILED! File contains '"lin"', expected 'abcXe'."
  Call Exit 1
End

Say "PASSED!"
Say

Call Stream tmpfile,"C","CLOSE"
Call SysFileDelete tmpfile
Say "Let's try CODEPOINTS writing for a fixed-length encoding (UTF-32) now:"

Call Stream tmpFile,"Command", "Open Write ENCODING UTF-32 CODEPOINTS"
Call CharOut tmpFile, "abcde" -- Write some chars
Call CharOut tmpFile,, 4      -- Set the write position
Call CharOut tmpFile,"X"      -- Write one char
Call CharOut tmpFile          -- Close the file

If   Stream( tmpFile, "State") \== "UNKNOWN" Then Do
  Say "FAILED! Stream state should be UNKNOWN after closing."
  Call Exit 1
End
lin = LineIn(tmpFile)
If lin \== "0000 0061 0000 0062 0000 0063 0000 0058 0000 0065"X Then Do
  Say "FAILED! File contains '"lin"', expected 'abcXe'."
  Say "["C2X(lin)"]"
  Call Exit 1
End
Say "Write, seek, overwrite, close: PASSED!"
Say

Call Stream tmpfile,"C","CLOSE"
Call SysFileDelete tmpfile
Say "Now let's try TEXT writing for a fixed-length encoding (UTF-32) now:"

Call Stream tmpFile,"Command", "Open Write ENCODING UTF-32 TEXT"
Call CharOut tmpFile, "abcde" -- Write some chars
Signal On Syntax Name TEXTUTF32
Call CharOut tmpFile,, 4      -- Set the write position
Say "FAILED! Syntax error expected"
Call Exit 1
TEXTUTF32:
Call CharOut tmpFile,"X"      -- Write one char. Seek will have failed, this will be written at the end of the file.
Call CharOut tmpFile          -- Close the file

If   Stream( tmpFile, "State") \== "UNKNOWN" Then Do
  Say "FAILED! Stream state should be UNKNOWN after closing."
  Call Exit 1
End
lin = LineIn(tmpFile)
If lin \== "0000 0061 0000 0062 0000 0063 0000 0064 0000 0065 0000 0058"X Then Do
  Say "FAILED! File contains '"lin"', expected 'abcdeX'."
  Call Exit 1
End
Say "Write, (failed) seek, write, close: PASSED!"
Say 

Call Stream tmpfile,"C","CLOSE"
Call SysFileDelete tmpfile
Say "Now let's try CODEPOINTS writing for a variable-length encoding (UTF-16) now:"

Call Stream tmpFile,"Command", "Open Write ENCODING UTF-16 CODEPOINTS"
Call CharOut tmpFile, "abcde" -- Write some chars
Signal On Syntax Name TEXTUTF16
Call CharOut tmpFile,, 4      -- Set the write position (will fail)
Say "FAILED! Syntax error expected"
Call Exit 1
TEXTUTF16:
Call CharOut tmpFile,"X"      -- Write one char (will be at the end of the file)
Call CharOut tmpFile          -- Close the file

If   Stream( tmpFile, "State") \== "UNKNOWN" Then Do
  Say "FAILED! Stream state should be UNKNOWN after closing."
  Call Exit 1
End
lin = LineIn(tmpFile)
If lin \== "0061 0062 0063 0064 0065 0058"X Then Do
  Say "FAILED! File contains '"lin"', expected 'abcXe'."
  Call Exit 1
End
Say "Write, (failed) seek, write, close: PASSED!"
Say

Call Exit 0

Test: Procedure
  Parse Arg fn, start, length, expected, syntax
  
  Call CharOut , "Testing 'Call CharIn """fn"""," start"," length"'... "
  
  Signal On Syntax 
  If length == "" Then Length = 1
  If Arg(2,"o") Then Call CharIn fn,      , length
  Else               Call CharIn fn, start, length
  If syntax Then Do
    Say "FAILED!"
    Say "Expected Syntax error."
    Call Exit 1
  End
  If result == expected Then Do
    Say "PASSED!"
    Return
  End
  Say "FAILED!"
  Call Exit 1
  
Syntax:
  If \syntax Then Do
    Say "FAILED!"
    Say Condition("O")~TraceBack~makeArray
    Say "Unexpected Syntax error:" rc"."Condition("E") "on" Condition("O")~program":" Condition("O")~ErrorText
    Say Condition("O")~Message
    Call Exit 1
  End
  Say "PASSED!"
  Return
 
Exit:
  Call Stream tmpfile,"C","CLOSE"
  Call SysFileDelete tmpfile
  Exit Arg(1)

CreateFile: Procedure Expose tmpFile
  Call Stream tmpFile,"C","Open Write Replace"
  Use Strict Arg lines, eol
  Do counter c line Over lines
    Call CharOut tmpFile, line
    -- No line-end after last line    
    If c < lines~items Then Call CharOut tmpFile, eol
  End
  Call Stream tmpFile,"C","CLOSE"
Return  
